<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="NIHTest" duration-ms="18889" started-at="2021-03-10T13:58:36 EST" finished-at="2021-03-10T13:58:55 EST">
    <groups>
    </groups>
    <test name="AppleStock" duration-ms="18889" started-at="2021-03-10T13:58:36 EST" finished-at="2021-03-10T13:58:55 EST">
      <class name="stockmarket.StockPrice">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:stockmarket.StockPrice@954b04f]" name="beforeSuite" is-config="true" duration-ms="161" started-at="2021-03-10T13:58:36 EST" finished-at="2021-03-10T13:58:36 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:stockmarket.StockPrice@954b04f]" name="beforeClass" is-config="true" duration-ms="0" started-at="2021-03-10T13:58:36 EST" finished-at="2021-03-10T13:58:36 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="launchURl(java.lang.String,java.lang.String)[pri:0, instance:stockmarket.StockPrice@954b04f]" name="launchURl" duration-ms="11764" started-at="2021-03-10T13:58:36 EST" finished-at="2021-03-10T13:58:48 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://finance.yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchURl -->
        <test-method status="PASS" signature="searchForTicker(java.lang.String)[pri:0, instance:stockmarket.StockPrice@954b04f]" name="searchForTicker" duration-ms="6587" started-at="2021-03-10T13:58:48 EST" finished-at="2021-03-10T13:58:55 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[AAPL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForTicker -->
        <test-method status="FAIL" signature="validateTickerPrice(java.lang.String)[pri:0, instance:stockmarket.StockPrice@954b04f]" name="validateTickerPrice" duration-ms="66" started-at="2021-03-10T13:58:55 EST" finished-at="2021-03-10T13:58:55 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[130]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at stockmarket.StockPrice.validateTickerPrice(StockPrice.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTickerPrice -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:stockmarket.StockPrice@954b04f]" name="afterClass" is-config="true" duration-ms="430" started-at="2021-03-10T13:58:55 EST" finished-at="2021-03-10T13:58:55 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:stockmarket.StockPrice@954b04f]" name="afterSuite" is-config="true" duration-ms="2299" started-at="2021-03-10T13:58:55 EST" finished-at="2021-03-10T13:58:57 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- stockmarket.StockPrice -->
    </test> <!-- AppleStock -->
  </suite> <!-- NIHTest -->
</testng-results>
